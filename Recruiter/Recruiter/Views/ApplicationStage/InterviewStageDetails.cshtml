@model Recruiter.Models.Interview

@{
    ViewData["Title"] = "InterviewStageDetails";
}

<h2>Interview Stage Details - @Model.GetType().Name</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Application.User)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Application.User.FirstName) @Html.DisplayFor(model => model.Application.User.LastName)
            <b Condition="Model.Application.User != null">
                (@Html.DisplayFor(model => model.Application.User.Email))
            </b>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Application.JobPosition)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Application.JobPosition.Name)
        </dd>

        <hr />
        @*<h3>Stage Details</h3>*@
        @*<dt>
                @Html.DisplayNameFor(model => model.Id)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Id)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Level)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Level)
            </dd>*@
        <dt>
            Stage
        </dt>
        <dd>
            @Html.DisplayFor(model => model.GetType().Name)

        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ResponsibleUser)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ResponsibleUser.FirstName) @Html.DisplayFor(model => model.ResponsibleUser.LastName)
            <b Condition="Model.ResponsibleUser != null">
                (@Html.DisplayFor(model => model.ResponsibleUser.Email))
            </b>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Accepted)
        </dt>
        <dd>
            <span condition="@Model.Accepted" class="glyphicon glyphicon-ok"></span>
            <span condition="!@Model.Accepted && Model.State == ApplicationStageState.Finished" class="glyphicon glyphicon-remove"></span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AcceptedBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AcceptedBy.FirstName) @Html.DisplayFor(model => model.AcceptedBy.LastName)
            <b Condition="Model.AcceptedBy != null">
                (@Html.DisplayFor(model => model.AcceptedBy.Email))
            </b>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Note)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Note)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Rate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Rate)
        </dd>


    </dl>
</div>

<h3>Appointments</h3>
<div class="row panel-body">
    @if (Model.InterviewAppointments.Count() != 0)
    {
        <table class="well table table-condensed table-bordered" header header-content="Interview Appointments" >
            <thead>
                <tr>
                    @*<th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().Id)</th>*@
                    <th>@Html.DisplayNameFor(model => model.InterviewAppointments.First().StartTime)</th>
                    <th>@Html.DisplayNameFor(model => model.InterviewAppointments.First().Duration)</th>
                    <th>@Html.DisplayNameFor(model => model.InterviewAppointments.First().EndTime)</th>
                    <th>@Html.DisplayNameFor(model => model.InterviewAppointments.First().InterviewAppointmentState)</th>
                    <th>@Html.DisplayNameFor(model => model.InterviewAppointments.First().AcceptedByRecruit)</th>
                    <th>@Html.DisplayNameFor(model => model.InterviewAppointments.First().AcceptedByRecruitTime)</th>
                    <th>
                        <span class="glyphicon glyphicon-wrench">
                        </span>
                    </th>
                    @*<th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().InterviewId)</th>*@
                </tr>
            </thead>
            <tbody>
                @foreach (var appointment in Model.InterviewAppointments)
                {
                    @if (appointment.InterviewAppointmentState == InterviewAppointmentState.Rejected)
                    {
                        @:<tr style="color: gray">
                    }
                    else
                    {
                        @:<tr>
                    }
                    
                        @*<td>@Html.DisplayFor(model => appointment.Id)</td>*@
                        <td>@Html.DisplayFor(model => appointment.StartTime)</td>
                        <td>@Html.DisplayFor(model => appointment.Duration)</td>
                        <td>@Html.DisplayFor(model => appointment.EndTime)</td>
                        <td>@Html.DisplayFor(model => appointment.InterviewAppointmentState)</td>
                        <td>@Html.DisplayFor(model => appointment.AcceptedByRecruit)</td>
                        <td>@Html.DisplayFor(model => appointment.AcceptedByRecruitTime)</td>
                        @*<td>@Html.DisplayFor(model => appointment.InterviewId)</td>*@
                        <td>
                            <a Condition="appointment.InterviewAppointmentState == InterviewAppointmentState.WaitingToAdd"
                               class="btn btn-default" asp-action="RemoveAppointmentsFromInterview"
                               asp-route-appointmentId="@appointment.Id"
                               asp-route-returnurl="@Context.Request.Path">
                                <span class="glyphicon glyphicon-minus small">
                                </span>
                            </a>
                        </td>
                    @:</tr>
                }
            </tbody>
        </table>
    }
    else
    {
        @:Interview Appointments not found.
    }
</div>

<a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Back</a>
<a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-controller="Home" asp-action="Index">Back</a>