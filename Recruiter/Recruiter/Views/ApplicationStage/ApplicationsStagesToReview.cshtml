@using Recruiter.Models.ApplicationStageViewModels
@model ApplicationsStagesToReviewViewModel

@{
    ViewData["Title"] = "Applications";
}

<h2>Application stages to review</h2>

<div>
    <ul class="nav nav-tabs">
        @if (Model.StageSortedByName.Where(x => x.Name == @ViewContext.RouteData.Values["stageName"]?.ToString())
                                    .Count() == 0)
        {
            <li class="nav-item active">
                <a asp-action="ApplicationsStagesToReview" asp-route-stageName="">All</a>
            </li>
        }
        else
        {
            <li class="nav-item ">
                <a asp-action="ApplicationsStagesToReview" asp-route-stageName="">All</a>
            </li>
        }

        @foreach (var stage in Model.StageSortedByName)
        {
            //if (@ViewContext.HttpContext.Request.Query["stageName"] == stage.Name)
            if (@ViewContext.RouteData.Values["stageName"]?.ToString() == stage.Name)
            {
                <li class="nav-item active">
                    <a asp-action="ApplicationsStagesToReview" asp-route-stageName="@stage.Name">
                        @*@Html.DisplayFor(x => stage.Name)*@
                        @switch (@stage.Name)
                        {
                            case "ApplicationApproval":
                                @:Application Approval
                                break;
                            case "PhoneCall":
                                @:Phone Call
                                break;
                            case "Homework":
                                @:Homework
                                break;
                            case "Interview":
                                @:Interview
                                break;
                        }
                        (@Html.DisplayFor(x => stage.Quantity))
                    </a>
                </li>
            }
            else
            {
                <li Condition="stage.Quantity!=0" class="nav-item">
                    <a asp-action="ApplicationsStagesToReview" asp-route-stageName="@stage.Name">
                        @*@Html.DisplayFor(x => stage.Name)*@
                        @switch (@stage.Name)
                        {
                            case "ApplicationApproval":
                                @:Application Approval
                                break;
                            case "PhoneCall":
                                @:Phone Call
                                break;
                            case "Homework":
                                @:Homework
                                break;
                            case "Interview":
                                @:Interview
                                break;
                        }
                        (@Html.DisplayFor(x => stage.Quantity))
                    </a>
                </li>
                <li Condition="stage.Quantity==0" class="nav-item disabled">
                    <a>
                        @*@Html.DisplayFor(x => stage.Name)*@
                        @switch (@stage.Name)
                        {
                            case "ApplicationApproval":
                                @:Application Approval
                                break;
                            case "PhoneCall":
                                @:Phone Call
                                break;
                            case "Homework":
                                @:Homework
                                break;
                            case "Interview":
                                @:Interview
                                break;
                        }
                    </a>
                </li>
            }
        }
    </ul>
</div>

@if (!Model.AsignedStages.Any())
{
    <tr>
        <td colspan="3" class="text-center">
            <br />
            @*@:Any job position not found.*@
            Any application stages to review not found.
        </td>
    </tr>
}
else
{
    <table class="table table-condensed table-bordered" header header-content="My applications">
        <tr>
            <th>Application</th>
            <th>Job Position</th>
            <th>Stage</th>
            <th>Apply time</th>
        </tr>

        @foreach (var stage in Model.AsignedStages)
        {
            @*<tr>*@
            @if (stage.CurrentStage.GetType().Name == "Homework" && (stage.CurrentStage as Homework).HomeworkState == HomeworkState.WaitingForSendHomework)
            {
                if ((stage.CurrentStage as Homework)?.EndTime < DateTime.UtcNow)
                {
                    @:<tr style = "background-color: red;">
                }
            }
            else
            {
                @:<tr>
            }
                <td>
                    <a asp-controller="Application" 
                        asp-action="ApplicationDetails" 
                        asp-route-applicationId="@stage.Application.Id" 
                        asp-route-returnurl="@Context.Request.Path">
                            @Html.DisplayFor(model => stage.Application.User.FirstName)
                            @Html.DisplayFor(model => stage.Application.User.LastName)
                            (@Html.DisplayFor(model => stage.Application.User.Email))
                    </a>
                </td>
                <td>
                    <a asp-controller="JobPosition" 
                        asp-action="Details" 
                        asp-route-jobPositionId="@stage.Application.JobPosition.Id" 
                        asp-route-returnurl="@Context.Request.Path">
                            @Html.DisplayFor(model => stage.Application.JobPosition.Name)
                    </a>
                </td>
                <td>
                    @if (stage.CurrentStage.GetType().Name == "Homework")
                    {
                        var homework = stage.CurrentStage as Homework;
                        switch (homework.HomeworkState)
                        {
                            case HomeworkState.WaitingForSpecification:
                                <a asp-controller="ApplicationStage" 
                                    asp-action="ProcessStage" 
                                    asp-route-stageId="@stage.CurrentStage.Id" 
                                    asp-route-returnurl="@Context.Request.Path">
                                        Add homework specification
                                </a>
                                break;
                            case HomeworkState.WaitingForRead:
                                @:Waiting for reading homework
                                break;
                            case HomeworkState.WaitingForSendHomework:
                                @:Waiting for sending homework
                                <b>
                                    (Expiry time: @Html.DisplayFor(model => homework.EndTime))
                                </b>
                                break;
                            case HomeworkState.Completed:
                                <a asp-controller="ApplicationStage" 
                                    asp-action="ProcessStage" 
                                    asp-route-stageId="@stage.CurrentStage.Id" 
                                    asp-route-returnurl="@Context.Request.Path">
                                        Rate homework
                                </a>
                                break;
                        }
                    }
                    else if (stage.CurrentStage.GetType().Name == "Interview")
                    {
                        var interview = stage.CurrentStage as Interview;
                        switch (interview.InterviewState)
                        {
                            case InterviewState.WaitingForSettingAppointments:
                                <a asp-controller="ApplicationStage" 
                                    asp-action="ProcessStage" 
                                    asp-route-stageId="@stage.CurrentStage.Id" 
                                    asp-route-returnurl="@Context.Request.Path">
                                        Waiting for setting appointments
                                </a>
                                break;
                            case InterviewState.RequestForNewAppointments:
                                <a style="color: blue" 
                                    asp-controller="ApplicationStage" 
                                    asp-action="ProcessStage" 
                                    asp-route-stageId="@stage.CurrentStage.Id" 
                                    asp-route-returnurl="@Context.Request.Path">
                                        Reguest for another appointments
                                </a>
                                break;
                            case InterviewState.WaitingForConfirmAppointment:
                                @:Waiting to confirm appointment
                                break;
                            case InterviewState.AppointmentConfirmed:
                                @if (interview.InterviewAppointments?.FirstOrDefault()?.StartTime > DateTime.Now)
                                {
                                    <b>
                                        Interview confirmed (@interview.InterviewAppointments.FirstOrDefault().StartTime.ToLocalTime())
                                    </b>
                                }
                                else
                                {
                                    <a style="color: green"
                                       asp-controller="ApplicationStage"
                                       asp-action="ProcessStage"
                                       asp-route-stageId="@stage.CurrentStage.Id"
                                       asp-route-returnurl="@Context.Request.Path">
                                        Rate interview
                                    </a>
                                }
                                break;
                            @*case InterviewState.InterviewCompleted:
                                @:Interview completed
                                break;*@
                        }
                    }
                    else
                    {
                        <a asp-controller="ApplicationStage" 
                            asp-action="ProcessStage" 
                            asp-route-stageId="@stage.CurrentStage.Id" 
                            asp-route-returnurl="@Context.Request.Path">
                                @*Process*@
                                @switch (@stage.CurrentStage.GetType().Name)
                                {
                                    case "ApplicationApproval":
                                        @:Accept application
                                        break;
                                    case "PhoneCall":
                                        @:Make phone call
                                        break;
                                    @*case "Homework":
                                        @:Zadanie domowe
                                        break;
                                    case "Interview":
                                        @:Rozmowa kwalifikacyjna
                                        break;*@
                                }
                        </a>
                    }
                </td>
                <td>
                    @Html.DisplayFor(model => stage.Application.CreatedAt)
                </td>
            @:</tr>
        }
    </table>
}




@*@if (Model.StageSortedByName.Where(x => x.Name == @ViewContext.HttpContext.Request.Query["stageName"]).Count() == 0)
    {
        <b>
            <a asp-action="ApplicationsStagesToReview" asp-route-stageName="">All</a> |
        </b>
    }
    else
    {
        <a asp-action="ApplicationsStagesToReview" asp-route-stageName="">All</a> @:|
    }

    @foreach (var stage in Model.StageSortedByName)
    {
        if (@ViewContext.HttpContext.Request.Query["stageName"] == stage.Name)
        {
            <b>
                <a asp-action="ApplicationsStagesToReview" asp-route-stageName="@stage.Name">
                    @Html.DisplayFor(x => stage.Name)
                    (@Html.DisplayFor(x => stage.Quantity))
                </a> |
            </b>

        }
        else
        {
            <a asp-action="ApplicationsStagesToReview" asp-route-stageName="@stage.Name">
                @Html.DisplayFor(x => stage.Name)
                (@Html.DisplayFor(x => stage.Quantity))
            </a> @:|
        }
    }*@
