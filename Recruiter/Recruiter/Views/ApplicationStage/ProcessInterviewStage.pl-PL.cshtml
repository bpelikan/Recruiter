@model Recruiter.Models.ApplicationStageViewModels.ProcessInterviewViewModel

@{
    ViewData["Title"] = "Process Interview Stage";
}

@await Html.PartialAsync("_ApplicationDetailsPartialView", Model.Application)

<hr />
<h3>Spotkanie</h3>
@*<a class="btn btn-default" asp-action="AddInterviewAppointments" asp-route-stageId="@Model.StageToProcess.Id">
        Add Interview Appointment
    </a>*@

<div class="row panel-body">
    @if (Model.StageToProcess.InterviewAppointments.Count() != 0)
    {
        <table class="well table table-condensed table-bordered" header header-content="Interview Appointments">
            <thead>
                <tr>
                    @*<th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().Id)</th>*@
                    <th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().StartTime)</th>
                    <th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().Duration)</th>
                    <th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().EndTime)</th>
                    @*<th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().AcceptedByRecruit)</th>*@
                    <th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().AcceptedByRecruitTime)</th>
                    @*<th>
                            - @Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().InterviewId)
                            <br />
                        </th>*@
                </tr>
            </thead>
            <tbody>
                @foreach (var appointment in Model.StageToProcess.InterviewAppointments)
                {
                    <tr>
                        @*<td>@Html.DisplayFor(model => appointment.Id)</td>*@
                        <td>@Html.DisplayFor(model => appointment.StartTime)</td>
                        <td>@Html.DisplayFor(model => appointment.Duration)</td>
                        <td>@Html.DisplayFor(model => appointment.EndTime)</td>
                        @*<td>@Html.DisplayFor(model => appointment.AcceptedByRecruit)</td>*@
                        <td>
                            <span condition="appointment.AcceptedByRecruit" class="glyphicon glyphicon-ok"></span>
                            @Html.DisplayFor(model => appointment.AcceptedByRecruitTime)
                        </td>
                        @*<td>
                                - @Html.DisplayFor(model => appointment.InterviewId)
                                <br />
                            </td>*@
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        @:Interview Appointments not found.
    }
</div>



<hr />
<h3>Oceń rozmowę rekrutacyjną</h3>

<form asp-controller="ApplicationStage" asp-action="ProcessInterview" method="post" class="form-horizontal" role="form">
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group" hidden>
        <label asp-for="Application.Id" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Application.Id" class="form-control" readonly="readonly" />
            <span asp-validation-for="Application.Id" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group" hidden>
        <label asp-for="StageToProcess.Id" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="StageToProcess.Id" class="form-control" readonly="readonly" />
            <span asp-validation-for="StageToProcess.Id" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="StageToProcess.Note" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="StageToProcess.Note" class="form-control" />
            <span asp-validation-for="StageToProcess.Note" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="StageToProcess.Rate" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="StageToProcess.Rate" class="form-control" />
            <span asp-validation-for="StageToProcess.Rate" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-success" value="Zaakceptuj" asp-route-accepted="@true" asp-route-returnUrl="@ViewData["ReturnUrl"]" />
            <input type="submit" class="btn btn-danger" value="Odrzuć" asp-route-accepted="@false" asp-route-returnUrl="@ViewData["ReturnUrl"]" />
        </div>
        <a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Wróć</a>
        <a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="Index">Wróć</a>
    </div>
</form>

@await Html.PartialAsync("_FinishedStagesPartialView", Model.ApplicationStagesFinished)
@await Html.PartialAsync("_WaitingStagesPartialView", Model.ApplicationStagesWaiting)