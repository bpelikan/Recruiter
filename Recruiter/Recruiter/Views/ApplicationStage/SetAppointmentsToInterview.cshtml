@model Recruiter.Models.ApplicationStageViewModels.SetAppointmentsToInterviewViewModel

@{
    ViewData["Title"] = "AddAppointmentsToInterviewView";
}

@await Html.PartialAsync("_ApplicationDetailsPartialView", Model.Application)

<a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Back</a>
<a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="Index">Back</a>

<hr />
<h3>Add Appointment</h3>
@*<a class="btn btn-default" asp-action="AddInterviewAppointments" asp-route-stageId="@Model.StageToProcess.Id">
    Add Interview Appointment
</a>*@

<form asp-controller="ApplicationStage" asp-action="SetAppointmentsToInterview" method="post" class="form-horizontal" role="form">
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group" hidden>
        <label asp-for="NewInterviewAppointment.Id" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="NewInterviewAppointment.Id" class="form-control" readonly="readonly" />
            <span asp-validation-for="NewInterviewAppointment.Id" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group" hidden>
        <label asp-for="NewInterviewAppointment.InterviewId" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="NewInterviewAppointment.InterviewId" class="form-control" readonly="readonly" />
            <span asp-validation-for="NewInterviewAppointment.InterviewId" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="NewInterviewAppointment.StartTime" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="NewInterviewAppointment.StartTime" class="form-control" value="@Model.NewInterviewAppointment.StartTime.ToString("s")"/>
            <span asp-validation-for="NewInterviewAppointment.StartTime" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="NewInterviewAppointment.Duration" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="NewInterviewAppointment.Duration" class="form-control" />
            <span asp-validation-for="NewInterviewAppointment.Duration" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*<input type="submit" class="btn btn-primary glyphicon glyphicon-plus" value="Add" asp-route-returnUrl="@ViewData["ReturnUrl"]" />*@
            <button class="btn btn-primary btn-block glyphicon glyphicon-plus" type="submit" asp-route-returnUrl="@ViewData["ReturnUrl"]">
            </button>
        </div>
        @*<a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Back</a>
            <a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="Index">Back</a>*@
        @*<a class="btn btn-sm btn-default" asp-action="Index">Back</a>*@
    </div>
</form>


<div class="row panel-body">
    @if (Model.StageToProcess.InterviewAppointments.Count() != 0)
    {
        <table class="well table table-condensed table-bordered" header header-content="Interview Appointments">
            <thead>
                <tr>
                    @*<th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().Id)</th>*@
                    <th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().StartTime)</th>
                    <th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().Duration)</th>
                    <th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().EndTime)</th>
                    <th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().InterviewAppointmentState)</th>
                    @*<th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().AcceptedByRecruit)</th>
                    <th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().AcceptedByRecruitTime)</th>*@
                    <th>
                        <span class="glyphicon glyphicon-wrench">
                        </span>
                    </th>
                    @*<th>@Html.DisplayNameFor(model => model.StageToProcess.InterviewAppointments.First().InterviewId)</th>*@
                </tr>
            </thead>
            <tbody>
                @foreach (var appointment in Model.StageToProcess.InterviewAppointments)
                {
                    @if (appointment.InterviewAppointmentState == InterviewAppointmentState.Rejected)
                    {
                        @:<tr style="color: gray; text-decoration: line-through">
                    }
                    else
                    {
                        @:<tr>
                    }
                    
                        @*<td>@Html.DisplayFor(model => appointment.Id)</td>*@
                        <td>@Html.DisplayFor(model => appointment.StartTime)</td>
                        <td>@Html.DisplayFor(model => appointment.Duration)</td>
                        <td>@Html.DisplayFor(model => appointment.EndTime)</td>
                        <td>
                            @Html.DisplayFor(model => appointment.InterviewAppointmentState)
                            @*@switch (appointment.InterviewAppointmentState)
                            {
                                case InterviewAppointmentState.WaitingToAdd:
                                    @:Waiting to add
                                    break;
                                case InterviewAppointmentState.WaitingForConfirm:
                                    @:Waiting for confirm
                                    break;
                                case InterviewAppointmentState.Confirmed:
                                    @:Confirmed
                                    break;
                                case InterviewAppointmentState.Rejected:
                                    @:Rejected
                                    break;
                                case InterviewAppointmentState.Finished:
                                    @:Finished
                                    break;
                            }*@
                        </td>
                        @*<td>@Html.DisplayFor(model => appointment.AcceptedByRecruit)</td>
                        <td>@Html.DisplayFor(model => appointment.AcceptedByRecruitTime)</td>*@
                        <td>
                            <a Condition="appointment.InterviewAppointmentState == InterviewAppointmentState.WaitingToAdd"
                                class="btn btn-default" asp-action="RemoveAppointmentsFromInterview" 
                                                        asp-route-appointmentId="@appointment.Id"
                                                        asp-route-stageId="@appointment.InterviewId"
                                                        asp-route-returnUrl="@ViewData["ReturnUrl"]">
                                    <span class="glyphicon glyphicon-trash small">
                                    </span>
                            </a>
                        </td>
                        @*<td>@Html.DisplayFor(model => appointment.InterviewId)</td>*@
                    @:</tr>
                }
            </tbody>
        </table>
    }
    else
    {
        @:Interview Appointments not found.
    }
</div>

<div>
    <div class="col-md-6">
        <a class="btn btn-sm btn-success btn-block"
           asp-action="SendInterviewAppointmentsToConfirm"
           asp-route-stageId="@Model.StageToProcess.Id"
           asp-route-accepted="@true"
           asp-route-returnurl="@ViewData["ReturnUrl"]">
            Send appointment to confirm
        </a>
    </div>
    <div class="col-md-6">
        <a class="btn btn-sm btn-danger btn-block"
           asp-action="SendInterviewAppointmentsToConfirm"
           asp-route-stageId="@Model.StageToProcess.Id"
           asp-route-accepted="@false"
           asp-route-returnurl="@ViewData["ReturnUrl"]">
            Reject
        </a>
    </div>
</div>

@*<a class="btn btn-sm btn-success"
       asp-action="SendInterviewAppointmentsToConfirm"
       asp-route-stageId="@Model.StageToProcess.Id"
       asp-route-accepted="@true"
       asp-route-returnurl="@ViewData["ReturnUrl"]">
    Send appointment to confirm
</a>
<a class="btn btn-sm btn-danger"
       asp-action="SendInterviewAppointmentsToConfirm"
       asp-route-stageId="@Model.StageToProcess.Id"
       asp-route-accepted="@false"
       asp-route-returnurl="@ViewData["ReturnUrl"]">
    Reject
</a>*@

@*<form asp-controller="ApplicationStage" asp-action="AddAppointmentsToInterview" method="post" class="form-horizontal" role="form">
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group" hidden>
        <label asp-for="Application.Id" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="Application.Id" class="form-control" readonly="readonly" />
            <span asp-validation-for="Application.Id" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group" hidden>
        <label asp-for="StageToProcess.Id" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="StageToProcess.Id" class="form-control" readonly="readonly" />
            <span asp-validation-for="StageToProcess.Id" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-success" value="Add appointment to confirm" asp-route-accepted="@true" />
            <input type="submit" class="btn btn-danger" value="Reject" asp-route-accepted="@false" />
        </div>
        <a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Back</a>
        <a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="Index">Back</a>
    </div>
</form>*@

@await Html.PartialAsync("_FinishedStagesPartialView", Model.ApplicationStagesFinished)
@await Html.PartialAsync("_WaitingStagesPartialView", Model.ApplicationStagesWaiting)