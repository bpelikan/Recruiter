@using Recruiter.Models.MyApplicationViewModels
@model MyApplicationDetailsViewModel

@{
    ViewData["Title"] = "My Application Details";
}

<h2>My application details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.FirstName) @Html.DisplayFor(model => model.User.LastName) (@Html.DisplayFor(model => model.User.Email))
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.JobPosition.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.JobPosition.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CvFileUrl)
        </dt>
        <dd>
            <a href="@Model.CvFileUrl" target="_blank">Click to view CV</a>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ApplicationViews)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ApplicationViews) (@Html.DisplayFor(model => model.ApplicationViewsAll))
        </dd>
        <dt>
            Stages
        </dt>
        <dd>
            @foreach (var stage in Model.ApplicationStages)
            {
                @if (stage.GetType().Name == "Homework")
                {

                    @Html.DisplayFor(model => stage.GetType().Name)
                    <b Condition="!stage.Accepted && stage.State != ApplicationStageState.InProgress">
                        (@Html.DisplayFor(model => stage.State))
                    </b>
                    <span condition="stage.Accepted" class="glyphicon glyphicon-ok"></span>

                    if (stage.State == ApplicationStageState.InProgress)
                    {
                        if ((stage as Homework).HomeworkState == HomeworkState.WaitingForSpecification)
                        {
                            @:(@Html.DisplayFor(model => stage.State)) - Waiting for specification
                        }
                        else if ((stage as Homework).HomeworkState == HomeworkState.WaitingForRead)
                        {
                            <a asp-controller="MyApplication" asp-action="BeforeReadMyHomework" asp-route-stageId="@stage.Id" asp-route-returnurl="@Context.Request.Path">
                                <b>(@Html.DisplayFor(model => stage.State)) - Read homework</b>
                            </a>
                        }
                        else if ((stage as Homework).HomeworkState == HomeworkState.WaitingForSendHomework)
                        {
                            <a asp-controller="MyApplication" asp-action="BeforeReadMyHomework" asp-route-stageId="@stage.Id" asp-route-returnurl="@Context.Request.Path">
                                <b>(@Html.DisplayFor(model => stage.State)) - Send homework</b>
                            </a>
                        }
                        else if ((stage as Homework).HomeworkState == HomeworkState.Completed)
                        {
                            <a asp-controller="MyApplication" asp-action="ShowMyHomework" asp-route-stageId="@stage.Id" asp-route-returnurl="@Context.Request.Path">
                                <b>(@Html.DisplayFor(model => stage.State)) - Show my homework</b>
                            </a>
                        }
                    }
                    <br />
                }
                else
                {
                    @Html.DisplayFor(model => stage.GetType().Name)
                    <b Condition="!stage.Accepted">
                        (@Html.DisplayFor(model => stage.State))
                    </b>
                    <span condition="stage.Accepted" class="glyphicon glyphicon-ok"></span>
                    <br />
                }

            }

        </dd>

    </dl>
</div>

<form asp-action="DeleteMyApplication" asp-route-id="@Model.Id" method="post">
    <button type="submit" onclick="return confirm('Do you really want to delete this application?');" class="btn btn-sm btn-danger">
        Delete
    </button>
    <a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Back</a>
    <a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="MyApplications">Back</a>
</form>


