@using Recruiter.Models.MyApplicationViewModels
@model MyApplicationDetailsViewModel

@{
    ViewData["Title"] = "My Application Details";
}

<h2>My application details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.FirstName) @Html.DisplayFor(model => model.User.LastName) (@Html.DisplayFor(model => model.User.Email))
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.JobPosition.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.JobPosition.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CvFileUrl)
        </dt>
        <dd>
            <a href="@Model.CvFileUrl" target="_blank">Click to view CV</a>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ApplicationViews)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ApplicationViews) (@Html.DisplayFor(model => model.ApplicationViewsAll))
        </dd>
        <dt>
            Stages
        </dt>
        <dd>
            @foreach (var stage in Model.ApplicationStages)
            {
                <span condition="stage.Accepted" class="glyphicon glyphicon-ok"></span>
                <span condition="!stage.Accepted && stage.State == ApplicationStageState.Finished" class="glyphicon glyphicon-remove"></span>
                @Html.DisplayFor(model => stage.GetType().Name)
                <b Condition='!stage.Accepted &&
                                    (stage.GetType().Name != "Homework" && stage.State != ApplicationStageState.Finished ||
                                        (stage.GetType().Name == "Homework" && stage.State == ApplicationStageState.Waiting))'>
                    (@Html.DisplayFor(model => stage.State))
                </b>

                @if (stage.GetType().Name == "Homework")
                {
                    if (stage.State == ApplicationStageState.InProgress)
                    {
                        switch ((stage as Homework).HomeworkState)
                        {
                            case HomeworkState.WaitingForSpecification:
                                <b>
                                    (@Html.DisplayFor(model => stage.State))
                                </b>
                                @:- Waiting for specification
                                break;
                            case HomeworkState.WaitingForRead:
                                <a asp-controller="MyApplication" 
                                    asp-action="ProcessMyHomework" 
                                    asp-route-stageId="@stage.Id" 
                                    asp-route-applicationId="@stage.ApplicationId" 
                                    asp-route-returnUrl="@Context.Request.Path">
                                    <b>(@Html.DisplayFor(model => stage.State)) - Read homework</b>
                                </a>
                                break;
                            case HomeworkState.WaitingForSendHomework:
                                <a asp-controller="MyApplication" 
                                    asp-action="ProcessMyHomework" 
                                    asp-route-stageId="@stage.Id" 
                                    asp-route-applicationId="@stage.ApplicationId" 
                                    asp-route-returnUrl="@Context.Request.Path">
                                    <b>(@Html.DisplayFor(model => stage.State)) - Send homework</b>
                                </a>
                                break;
                            case HomeworkState.Completed:
                                <a asp-controller="MyApplication" 
                                    asp-action="ProcessMyHomework" 
                                    asp-route-stageId="@stage.Id" 
                                    asp-route-applicationId="@stage.ApplicationId" 
                                    asp-route-returnUrl="@Context.Request.Path">
                                    <b>(@Html.DisplayFor(model => stage.State)) - Show my homework</b>
                                </a>
                                break;
                        }
                    }
                    else if (stage.State == ApplicationStageState.Finished)
                    {
                        <a Condition="(stage as Homework).HomeworkState == HomeworkState.Completed" 
                            asp-controller="MyApplication" 
                            asp-action="ProcessMyHomework" 
                            asp-route-stageId="@stage.Id"
                            asp-route-applicationId="@stage.ApplicationId"
                            asp-route-returnUrl="@Context.Request.Path" >
                                <b> - Show my homework</b>
                        </a>
                    }
                    @*<a asp-controller="MyApplication" 
                        asp-action="ProcessMyHomework" 
                        asp-route-stageId="@stage.Id" 
                        asp-route-applicationId="@stage.ApplicationId" 
                        asp-route-returnUrl="@Context.Request.Path">
                        <b>TEST</b>
                    </a>*@
                }
                else if (stage.GetType().Name == "Interview")
                {
                    if (stage.State == ApplicationStageState.InProgress)
                    {
                        switch ((stage as Interview).InterviewState)
                        {
                            case InterviewState.WaitingForSettingAppointments:
                                @:- Waiting for Setting Appointments
                                break;
                            case InterviewState.RequestForNewAppointments:
                                @:- Waiting for Setting another Appointments
                                break;
                            case InterviewState.WaitingForConfirmAppointment:
                                <a asp-controller="MyApplication" 
                                    asp-action="ConfirmInterviewAppointments" 
                                    asp-route-stageId="@stage.Id" 
                                    asp-route-returnurl="@Context.Request.Path">
                                        <b> - Confirm your Appointment</b>
                                </a>
                                @*@:- confirm your Appointment*@
                                break;
                            case InterviewState.AppointmentConfirmed:
                                @:- Appointment Confirmed: 
                                <b Condition="Model.ConfirmedInterviewAppointment != null">
                                    @Html.DisplayFor(model => model.ConfirmedInterviewAppointment.StartTime)
                                    (Duration: @Html.DisplayFor(model => model.ConfirmedInterviewAppointment.Duration) min)
                                </b>
                                break;
                                //case InterviewState.InterviewCompleted:
                                //    break;
                        }
                    }
                    //else if (stage.State == ApplicationStageState.Finished)
                    //{

                    //}
                }
                <br />
            }

        </dd>

    </dl>
</div>

<form asp-action="DeleteMyApplication" asp-route-id="@Model.Id" asp-route-returnurl="@Context.Request.Path" method="post">
    <button type="submit" onclick="return confirm('Do you really want to delete this application?');" class="btn btn-sm btn-danger">
        Delete
    </button>
    <a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Back</a>
    <a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="MyApplications">Back</a>
</form>