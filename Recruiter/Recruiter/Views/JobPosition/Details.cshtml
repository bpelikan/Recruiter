@using Recruiter.Models.JobPositionViewModels
@model JobPositionViewModel

@{
    ViewData["Title"] = "Job Position Details";
}

<h2>Job Position Details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Creator)
        </dt>
        <dd>
            @if (Model.CreatorId == null)
            {
                <i>(CREATOR WAS DELETED)</i>
            }
            else
            {
                @Html.DisplayFor(model => model.Creator.FirstName) @: @Html.DisplayFor(model => model.Creator.LastName)
            }
        </dd>
    </dl>

    <table class="table table-condensed table-bordered" header header-content="Job position management">
        <tr>
            <th>@Html.DisplayNameFor(model => model.ApplicationStagesRequirement)</th>
            <th>Required</th>
        </tr>

        <tr>
            <td>@Html.DisplayNameFor(model => model.ApplicationStagesRequirement.IsApplicationApprovalRequired)</td>
            <td>@Html.DisplayFor(model => model.ApplicationStagesRequirement.IsApplicationApprovalRequired)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.ApplicationStagesRequirement.IsPhoneCallRequired)</td>
            <td>@Html.DisplayFor(model => model.ApplicationStagesRequirement.IsPhoneCallRequired)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.ApplicationStagesRequirement.IsHomeworkRequired)</td>
            <td>@Html.DisplayFor(model => model.ApplicationStagesRequirement.IsHomeworkRequired)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => model.ApplicationStagesRequirement.IsInterviewRequired)</td>
            <td>@Html.DisplayFor(model => model.ApplicationStagesRequirement.IsInterviewRequired)</td>
        </tr>
    </table>

</div>
<div>
    <form asp-action="Delete" asp-route-id="@Model.Id" method="post">
        <a class="btn btn-sm btn-primary" asp-controller="Application" asp-action="Apply" asp-route-id="@Model.Id" asp-route-returnurl="@Context.Request.Path">Apply</a>
        <a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@Model.Id" asp-route-returnurl="@Context.Request.Path">Edit</a>
        <button type="submit" onclick="return confirm('Do you really want to delete this user?');" class="btn btn-sm btn-danger">
            Delete
        </button>
        <a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Back</a>
        <a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="Index">Back</a>
    </form>
</div>


