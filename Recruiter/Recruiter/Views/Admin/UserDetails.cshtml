@model Recruiter.Models.AdminViewModels.UserDetailsViewModel

@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "User details";
}

<h2>User Details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Email)
            <span condition="Model.EmailConfirmed" class="glyphicon glyphicon-ok"></span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
    </dl>
</div>
<div>
    @*<form condition="@SignInManager.IsSignedIn(User) && @User.IsInRole("Administrator")" asp-action="DeleteUser" asp-route-id="@Model.Id" method="post">*@
    <form asp-action="DeleteUser" asp-route-id="@Model.Id" method="post">
        <a class="btn btn-sm btn-primary" asp-action="EditUser" asp-route-id="@Model.Id" asp-route-returnurl="@Context.Request.Path">Edit</a>
        <button type="submit" onclick="return confirm('Do you really want to delete this user?');" class="btn btn-sm btn-danger">
            Delete
        </button>
        <a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Back</a>
        <a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="UserManagement">Back</a>
    </form>
</div>