@model Recruiter.Models.AdminViewModels.UserDetailsWithRolesViewModel

@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "User details";
}

<h2>User Details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.User.FirstName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.FirstName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.User.LastName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.LastName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.User.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.Email)
            <span condition="Model.User.EmailConfirmed" class="glyphicon glyphicon-ok"></span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.User.PhoneNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.PhoneNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.User.CreatedAt)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.CreatedAt)
        </dd>
    </dl>
</div>
<div>
    @*<form condition="@SignInManager.IsSignedIn(User) && @User.IsInRole("Administrator")" asp-action="DeleteUser" asp-route-id="@Model.Id" method="post">*@
    <form asp-action="DeleteUser" asp-route-id="@Model.User.Id" method="post">
        <a class="btn btn-sm btn-primary" asp-action="EditUser" asp-route-id="@Model.User.Id" asp-route-returnurl="@Context.Request.Path">Edit</a>
        <button type="submit" onclick="return confirm('Do you really want to delete this user?');" class="btn btn-sm btn-danger">
            Delete
        </button>
        <a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Back</a>
        <a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="UserManagement">Back</a>
    </form>
</div>

<br />
<h3>User roles manager</h3>
<div>
    <hr />
    @if (Model.Roles.Count() != 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Roles)
                    </th>
                    <th>
                        Add
                    </th>
                    <th>
                        Delete
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var role in Model.Roles)
                {
                    <tr condition="role.IsInRole == true" style="background-color: lightyellow;">
                        <td>@role.Name</td>
                        <td></td>
                        <td><a class="btn btn-sm btn-danger" asp-action="DeleteUserFromRole" asp-route-id="@Model.User.Id" asp-route-roleName="@role.Name" asp-route-returnurl="@Context.Request.Path">Delete</a></td>
                    </tr>
                    <tr condition="role.IsInRole == false">
                        <td>@role.Name</td>
                        <td><a class="btn btn-sm btn-primary" asp-action="AddUserToRole" asp-route-id="@Model.User.Id" asp-route-roleName="@role.Name" asp-route-returnurl="@Context.Request.Path">Add</a></td>
                        <td></td>
                    </tr>

                }
            </tbody>
        </table>
    }
    else
    { 
        @:There is no roles.
    }
</div>