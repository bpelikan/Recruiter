@using Recruiter.Models.ApplicationViewModels
@model ApplicationsGroupedByStagesViewModel

@{
    ViewData["Title"] = "Aplikacje";
}

<h2>Aplikacje</h2>

<div>
    <ul class="nav nav-tabs">
        @if (Model.ApplicationStagesGroupedByName.Where(x => x.Name == @ViewContext.RouteData.Values["stageName"]?.ToString()).Count() == 0)
        {
            <li class="nav-item active">
                <a asp-action="Applications" asp-route-stageName="">Wszystkie</a>
            </li>
        }
        else
        {
            <li class="nav-item ">
                <a asp-action="Applications" asp-route-stageName="">Wszystkie</a>
            </li>
        }

        @foreach (var stage in Model.ApplicationStagesGroupedByName)
        {
            if (@ViewContext.RouteData.Values["stageName"]?.ToString() == stage.Name)
            {
                <li class="nav-item active ">
                    <a asp-action="Applications" asp-route-stageName="@stage.Name">
                        @*@Html.DisplayFor(x => stage.Name)*@
                        @switch (@stage.Name)
                        {
                            case "ApplicationApproval":
                                @:Akceptacja aplikacji
                                break;
                            case "PhoneCall":
                                @:Rozmowa telefoniczna
                                break;
                            case "Homework":
                                @:Zadanie domowe
                                break;
                            case "Interview":
                                @:Rozmowa kwalifikacyjna
                                break;
                        }
                        (@Html.DisplayFor(x => stage.Quantity))
                    </a>
                </li>
            }
            else
            {
                <li Condition="stage.Quantity!=0" class="nav-item">
                    <a asp-action="Applications" asp-route-stageName="@stage.Name">
                        @*@Html.DisplayFor(x => stage.Name)*@
                        @switch (@stage.Name)
                        {
                            case "ApplicationApproval":
                                @:Akceptacja aplikacji
                                break;
                            case "PhoneCall":
                                @:Rozmowa telefoniczna
                                break;
                            case "Homework":
                                @:Zadanie domowe
                                break;
                            case "Interview":
                                @:Rozmowa kwalifikacyjna
                                break;
                        }
                        (@Html.DisplayFor(x => stage.Quantity))
                    </a>
                </li>
                <li Condition="stage.Quantity==0" class="nav-item disabled">
                    <a>
                        @switch (@stage.Name)
                        {
                            case "ApplicationApproval":
                                @:Akceptacja aplikacji
                                break;
                            case "PhoneCall":
                                @:Rozmowa telefoniczna
                                break;
                            case "Homework":
                                @:Zadanie domowe
                                break;
                            case "Interview":
                                @:Rozmowa kwalifikacyjna
                                break;
                        }
                    </a>
                </li>
            }
        }
    </ul>
</div>


@if (!Model.Applications.Any())
{
    <tr><td colspan="3" class="text-center">Brak aplikacji</td></tr>
}
else
{
    <table class="table table-condensed table-bordered" header header-content="My applications">
        <tr>
            <th>Użytkownik</th>
            <th>Stanowisko</th>
            <th>Obecny etap</th>
            <th>Data aplikacji</th>
        </tr>

        @foreach (ApplicationsViewModel application in Model.Applications)
        {
            <tr>
                <td>
                    <a 
                        asp-action="ApplicationDetails" 
                        asp-route-applicationId="@application.Id" 
                        asp-route-returnurl="@Context.Request.Path">
                            @application.User.FirstName @application.User.LastName (@application.User.Email)
                    </a>
                </td>
                <td>
                    @application.JobPosition.Name
                </td>
                <td>
                    @*@Html.DisplayFor(model => application.CurrentStage)*@
                    @switch (@application.CurrentStage)
                    {
                        case "ApplicationApproval":
                            @:Akceptacja aplikacji
                            break;
                        case "PhoneCall":
                            @:Rozmowa telefoniczna
                            break;
                        case "Homework":
                            @:Zadanie domowe
                            break;
                        case "Interview":
                            @:Rozmowa kwalifikacyjna
                            break;
                    }
                    <b Condition="!application.CurrentStageIsAssigned">
                        (nieprzypisany)
                    </b>
                </td>
                <td>
                    @Html.DisplayFor(model => application.CreatedAt)
                </td>
            </tr>
        }
    </table>
}