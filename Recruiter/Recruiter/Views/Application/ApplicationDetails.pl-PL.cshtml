@model Recruiter.Models.ApplicationViewModels.ApplicationDetailsViewModel

@{
    ViewData["Title"] = "Szczegóły aplikacji";
}

<h2>Szczegóły aplikacji</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.User.FirstName) @Html.DisplayFor(model => model.User.LastName) (@Html.DisplayFor(model => model.User.Email))
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.JobPosition)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.JobPosition.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CvFileUrl)
        </dt>
        <dd>
            <a href="@Model.CvFileUrl" target="_blank">Click to view CV</a>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
    </dl>
</div>

<h3>Etapy</h3>

<div class="row panel-body">
    @*<hr />*@
    @if (Model.ApplicationStages.Count() != 0)
    {
        <table class="well table table-condensed table-bordered" header header-content="Applications Stages">
            <thead>
                <tr>
                    <th>Poziom</th>
                    <th>Etap</th>
                    <th>Stan</th>
                    <th>Ocena</th>
                    <th>Osoba odpowiedzialna</th>
                    <th>Zaakceptowane przez</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var applicationStage in Model.ApplicationStages)
                {
                    <tr>
                        <td>@Html.DisplayFor(model => applicationStage.Level)</td>
                        <td>
                            <a asp-action="ShowApplicationStageDetails"
                               asp-controller="ApplicationStage"
                               asp-route-stageId="@applicationStage.Id"
                               asp-route-returnurl="@Context.Request.Path">
                                @switch (@applicationStage.GetType().Name)
                                {
                                    case "ApplicationApproval":
                                        @:Akceptacja aplikacji
                                        break;
                                    case "PhoneCall":
                                        @:Rozmowa telefoniczna
                                        break;
                                    case "Homework":
                                        @:Zadanie domowe
                                        break;
                                    case "Interview":
                                        @:Rozmowa kwalifikacyjna
                                        break;
                                }
                            </a>
                            <span condition="applicationStage.State == ApplicationStageState.Finished">
                                <span condition="applicationStage.Accepted" class="glyphicon glyphicon-ok"></span>
                                <span condition="!applicationStage.Accepted" class="glyphicon glyphicon-remove"></span>
                            </span>

                        </td>
                        <td>@Html.DisplayFor(model => applicationStage.State)</td>
                        <td>@Html.DisplayFor(model => applicationStage.Rate)</td>
                        <td>
                            @Html.DisplayFor(model => applicationStage.ResponsibleUser.FirstName)
                            @Html.DisplayFor(model => applicationStage.ResponsibleUser.LastName)
                            <b Condition="applicationStage.ResponsibleUserId != null">
                                (@Html.DisplayFor(model => applicationStage.ResponsibleUser.Email))
                                <a Condition="applicationStage.State == ApplicationStageState.Waiting"
                                   asp-action="AssingUserToApplicationStage"
                                   asp-controller="ApplicationStage"
                                   asp-route-stageId="@applicationStage.Id"
                                   asp-route-returnurl="@Context.Request.Path">
                                    Zmień
                                </a>
                            </b>
                            <b Condition="applicationStage.ResponsibleUserId == null">
                                (not assigned)
                                <a asp-action="AssingUserToApplicationStage"
                                   asp-controller="ApplicationStage"
                                   asp-route-stageId="@applicationStage.Id"
                                   asp-route-returnurl="@Context.Request.Path">
                                    Przypisz
                                </a>
                            </b>
                        </td>
                        <td>
                            @Html.DisplayFor(model => applicationStage.AcceptedBy.FirstName)
                            @Html.DisplayFor(model => applicationStage.AcceptedBy.LastName)
                            <b Condition="applicationStage.AcceptedById != null">
                                (@Html.DisplayFor(model => applicationStage.AcceptedBy.Email))
                            </b>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        @:Applications Stages not found.
    }
</div>

<form asp-action="DeleteApplication" asp-route-applicationId="@Model.Id" asp-route-returnUrl="@ViewData["ReturnUrl"]" asp-route-returnUrlFail="@Context.Request.Path" method="post">
    <button type="submit" onclick="return confirm('Czy na pewno chcesz usunąć tą aplikację?');" class="btn btn-sm btn-danger">
        Usuń
    </button>
    <a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Wróć</a>
    <a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="Applications">Wróć</a>
</form>

@*<a condition="@ViewData["ReturnUrl"] != null" class="btn btn-sm btn-default" href="@ViewData["ReturnUrl"]">Back</a>
<a condition="@ViewData["ReturnUrl"] == null" class="btn btn-sm btn-default" asp-action="Applications">Back</a>*@

<h3>Ostatnie 10 wpisów historii (<a asp-controller="Application" asp-action="ApplicationsViewHistory" asp-route-applicationId="@Model.Id" asp-route-returnurl="@Context.Request.Path">Zobacz więcej</a>)</h3>

<div class="row panel-body">
    @*<hr />*@
    @if (Model.ApplicationsViewHistories.Count() != 0)
    {
        <table class="well table table-condensed table-bordered" header header-content="Applications View History">
            @*<table class="well table table-hover table-bordered table-scroll" header header-content="Applications View History">*@
            <thead>
                <tr>
                    <th>Czas</th>
                    <th>Użytkownik</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var applicationViewHistory in Model.ApplicationsViewHistories)
                {
                    <tr>
                        <td>@Html.DisplayFor(model => applicationViewHistory.ViewTime)</td>
                        <td><a asp-controller="Admin" asp-action="UserDetails" asp-route-id="@applicationViewHistory.UserId" asp-route-returnurl="@Context.Request.Path">@applicationViewHistory.UserId</a></td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        @:Applications View History not found.
    }
</div>

