<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Application with ID:{0} not found." xml:space="preserve">
    <value>Application with ID:{0} not found.</value>
  </data>
  <data name="ApplicationStage with ID:{0} not found." xml:space="preserve">
    <value>ApplicationStage with ID:{0} not found.</value>
  </data>
  <data name="Couldn't confirm InterviewAppointment with ID:{0} in Interview with ID:{1} that is not in WaitingForConfirmAppointment InterviewState." xml:space="preserve">
    <value>Couldn't confirm InterviewAppointment with ID:{0} in Interview with ID:{1} that is not in WaitingForConfirmAppointment InterviewState.</value>
  </data>
  <data name="CV file not found." xml:space="preserve">
    <value>CV file not found.</value>
  </data>
  <data name="CV must have .pdf extension." xml:space="preserve">
    <value>CV must have .pdf extension.</value>
  </data>
  <data name="Description is hidden, clicking ,,Show description&quot; button will start time counting and show you the content of the homework." xml:space="preserve">
    <value>Description is hidden, clicking ,,Show description" button will start time counting and show you the content of the homework.</value>
  </data>
  <data name="Homework with ID:{0} is not in Completed HomeworkState." xml:space="preserve">
    <value>Homework with ID:{0} is not in Completed HomeworkState.</value>
  </data>
  <data name="Homework with ID:{0} is not in WaitingForRead HomeworkState." xml:space="preserve">
    <value>Homework with ID:{0} is not in WaitingForRead HomeworkState.</value>
  </data>
  <data name="Homework with ID:{0} is not in WaitingForSendHomework HomeworkState." xml:space="preserve">
    <value>Homework with ID:{0} is not in WaitingForSendHomework HomeworkState.</value>
  </data>
  <data name="Interview with ID:{0} is not in WaitingForConfirmAppointment InterviewState." xml:space="preserve">
    <value>Interview with ID:{0} is not in WaitingForConfirmAppointment InterviewState.</value>
  </data>
  <data name="Interview with ID:{0} not found." xml:space="preserve">
    <value>Interview with ID:{0} not found.</value>
  </data>
  <data name="InterviewAppointment with ID:{0} has already scheduled notification." xml:space="preserve">
    <value>InterviewAppointment with ID:{0} has already scheduled notification.</value>
  </data>
  <data name="InterviewAppointment with ID:{0} is not in Confirmed InterviewAppointmentState." xml:space="preserve">
    <value>InterviewAppointment with ID:{0} is not in Confirmed InterviewAppointmentState.</value>
  </data>
  <data name="InterviewAppointment with ID:{0} not found." xml:space="preserve">
    <value>InterviewAppointment with ID:{0} not found.</value>
  </data>
  <data name="JobPosition with ID:{0} doesn't exist." xml:space="preserve">
    <value>JobPosition with ID:{0} doesn't exist.</value>
  </data>
  <data name="Notification time {0} must be in future." xml:space="preserve">
    <value>Notification time {0} must be in future.</value>
  </data>
  <data name="Something went wrong during uploading CV." xml:space="preserve">
    <value>Something went wrong during uploading CV.</value>
  </data>
  <data name="Time must be greater than 0." xml:space="preserve">
    <value>Time must be greater than 0.</value>
  </data>
  <data name="You are not allowed to confirm appointment with ID:{0}." xml:space="preserve">
    <value>You are not allowed to confirm appointment with ID:{0}.</value>
  </data>
  <data name="You are not allowed to get ApplicationStage with ID:{0}." xml:space="preserve">
    <value>You are not allowed to get ApplicationStage with ID:{0}.</value>
  </data>
  <data name="You are not allowed to request for new appointments in Interview with ID:{0}." xml:space="preserve">
    <value>You are not allowed to request for new appointments in Interview with ID:{0}.</value>
  </data>
  <data name="You aren't owner of application with ID:{0}." xml:space="preserve">
    <value>You aren't owner of application with ID:{0}.</value>
  </data>
  <data name="You ares not allowed to get InterviewAppointment with ID:{0}." xml:space="preserve">
    <value>You ares not allowed to get InterviewAppointment with ID:{0}.</value>
  </data>
  <data name="You ares not allowed to process InterviewAppointment with ID:{0}." xml:space="preserve">
    <value>You ares not allowed to process InterviewAppointment with ID:{0}.</value>
  </data>
  <data name="You can't confirm appointment that StartTime isn't in the future." xml:space="preserve">
    <value>You can't confirm appointment that StartTime isn't in the future.</value>
  </data>
  <data name="You have already sent application to this offer." xml:space="preserve">
    <value>You have already sent application to this offer.</value>
  </data>
</root>