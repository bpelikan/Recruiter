<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="&lt;a href='{0}'&gt;Click here to confirm&lt;/a&gt;" xml:space="preserve">
    <value>&lt;a href='{0}'&gt;Kliknij tutaj, aby potwierdzić&lt;/a&gt;</value>
  </data>
  <data name="&lt;br/&gt;Or confirm directly below:&lt;br/&gt;" xml:space="preserve">
    <value>&lt;br/&gt;Albo potwierdzić bezpośrednio poniżej:&lt;br/&gt;</value>
  </data>
  <data name="Application state notification" xml:space="preserve">
    <value>Powiadomienie o zmianie statusu aplikacji</value>
  </data>
  <data name="Check details by clicking this link: &lt;a href='{0}'&gt;link&lt;/a&gt;" xml:space="preserve">
    <value>Sprawdź szczegóły klikając w ten &lt;a href='{0}'&gt;adres&lt;/a&gt;.</value>
  </data>
  <data name="Confirm your email" xml:space="preserve">
    <value>Potwierdź adres email</value>
  </data>
  <data name="Congratulations! Your interview has ended positively. &lt;br/&gt;We invite you to the office of the company in order to sign the contract.&lt;br/&gt;&lt;br/&gt;" xml:space="preserve">
    <value>Gratulacje! Twoja aplikacja została rozpatrzona pozytywnie. &lt;br/&gt;Zapraszamy do naszego biura w celu dopełnienia formalności.&lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="Homework specification was added. &lt;br/&gt;&lt;br/&gt;" xml:space="preserve">
    <value>Zadanie domowe zostało dodane. &lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="Interview appointments was added. &lt;br/&gt;&lt;br/&gt;" xml:space="preserve">
    <value>Dodano spotkanie. &lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="Now you can confirm one of the appointments by clicking this link: &lt;a href='{0}'&gt;link&lt;/a&gt;" xml:space="preserve">
    <value>Teraz możesz potwierdzić spotkanie klikając w ten &lt;a href='{0}'&gt;adres&lt;/a&gt;.</value>
  </data>
  <data name="Now you can read your homework details by clicking this link: &lt;a href='{0}'&gt;link&lt;/a&gt;" xml:space="preserve">
    <value>Teraz możesz przeczytać treść swojego zadania domowego klikając w ten &lt;a href='{0}'&gt;adres&lt;/a&gt;.</value>
  </data>
  <data name="Please confirm your account by clicking this link: &lt;a href='{0}'&gt;link&lt;/a&gt;" xml:space="preserve">
    <value>Potwierdź adres email klikając w ten &lt;a href='{0}'&gt;adres&lt;/a&gt;.</value>
  </data>
  <data name="Recruitment process was finished" xml:space="preserve">
    <value>Proces rekrutacji został zakończony</value>
  </data>
  <data name="We regret to inform you that your CV was rejected. &lt;br/&gt;&lt;br/&gt;" xml:space="preserve">
    <value>Z przykrością informujemy, że Twoje CV zostało odrzucone. &lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="We regret to inform you that your homework was rejected. &lt;br/&gt;&lt;br/&gt;" xml:space="preserve">
    <value>Z przykrością informujemy, że Twoje zadanie domowe zostało odrzucone. &lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="We regret to inform you that your interview has ended negatively. &lt;br/&gt;&lt;br/&gt;" xml:space="preserve">
    <value>Z przykrością informujemy, że Twoja aplikacja została odrzucona.&lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="We regret to inform you that your telephone conversation has ended negatively. &lt;br/&gt;&lt;br/&gt;" xml:space="preserve">
    <value>Z przykrością informujemy, że Twoja rozmowa telefoniczna nie przebiegła pomyślnie.&lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="Your CV was accepted. &lt;br/&gt;&lt;br/&gt;" xml:space="preserve">
    <value>Twoje CV zostało zaakceptowane. &lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="Your homework was accepted. &lt;br/&gt;&lt;br/&gt;" xml:space="preserve">
    <value>Pragniemy poinformować, że Twoje zadanie domowe zostało zaakceptowane. &lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="Your telephone conversation has ended positively. &lt;br/&gt;&lt;br/&gt;" xml:space="preserve">
    <value>Pragniemy poinformować, że Twoja rozmowa telefoniczna przebiegła pomyślnie. &lt;br/&gt;&lt;br/&gt;</value>
  </data>
  <data name="{0} - Application state notification" xml:space="preserve">
    <value>{0} - Powiadomienie o zmianie statusu aplikacji</value>
  </data>
  <data name="{0} - Recruitment process was finished" xml:space="preserve">
    <value>{0} - Proces rekrutacji został zakończony</value>
  </data>
  <data name="{0} &lt;b&gt;(Duration: {1} min&lt;/b&gt;)" xml:space="preserve">
    <value>{0} &lt;b&gt;({1} min&lt;/b&gt;)</value>
  </data>
</root>